name: Deploy to GitHub Pages

on:
  workflow_run:
    workflows: ["Valide Code"]
    types:
      - completed
    branches: [master]
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    if: ${{ (github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.head_branch == 'master') || github.event_name == 'workflow_dispatch' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      # Setup Node.js and pnpm for web build
      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: 22

      - name: Setup pnpm
        uses: pnpm/action-setup@v4.2.0
        with:
          version: 10
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      # Setup Rust for CLI
      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Setup Rust cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            tools/cli/target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      # Install web dependencies
      - name: Install web dependencies 🔧
        working-directory: ./tools/web
        run: pnpm install

      # Build CLI
      - name: Build CLI 🦀
        working-directory: ./tools/cli
        run: cargo build --release

      # Ensure public directory exists
      - name: Create public directory 📁
        working-directory: ./tools/web
        run: mkdir -p public

      # Generate features JSON
      - name: Generate features data 📊
        working-directory: ./tools/cli
        run: |
          if [ ! -d "../../examples/javascript-basic/" ]; then
            echo "Error: javascript-basic example directory not found"
            exit 1
          fi
          cargo run --release -- ../../examples/javascript-basic/ --json > ../web/public/features.json
          if [ ! -s "../web/public/features.json" ]; then
            echo "Error: features.json was not generated or is empty"
            exit 1
          fi
          echo "Generated features.json with $(wc -l < ../web/public/features.json) lines"

      # Build web application
      - name: Build web application 🏗️
        working-directory: ./tools/web
        env:
          BASE_URL: "/features"
        run: |
          pnpm build
          if [ ! -d "dist" ]; then
            echo "Error: dist directory was not created"
            exit 1
          fi
          if [ ! -f "dist/features.json" ]; then
            echo "Error: features.json not found in dist directory"
            exit 1
          fi
          echo "Build completed successfully. Contents:"
          ls -la dist/
          echo "Features JSON file size: $(wc -c < dist/features.json) bytes"

      # Setup Pages
      - name: Setup Pages
        uses: actions/configure-pages@v5

      # Upload artifact
      - name: Upload artifact 📦
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./tools/web/dist

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages 🚀
        id: deployment
        uses: actions/deploy-pages@v4
